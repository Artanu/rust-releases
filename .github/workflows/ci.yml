# GitHub Actions workflow: CI for rust-releases
#
# based on: https://github.com/BurntSushi/bstr/blob/master/.github/workflows/ci.yml
# which is licensed under Apache License, Version 2.0 or MIT license

name: "ci"
on:
  pull_request:
  push:
    branches:
      - master
      - main
      - staging # for Bors
      - trying # for Bors
  schedule:
    - cron: '00 04 * * *'
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos, win-gnu, win-msvc]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable

          - build: beta
            os: ubuntu-latest
            rust: beta

          - build: nightly
            os: ubuntu-latest
            rust: nightly

          - build: macos
            os: macOS-latest
            rust: stable

          - build: win-gnu
            os: windows-latest
            rust: stable-x86_64-gnu

          - build: win-msvc
            os: windows-latest
            rust: stable


    steps:
      # checkout
      - name: checkout_repo
        uses: actions/checkout@v2

      # install: rust
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      # build / doc / test
      - name: build_all
        run: cargo build --verbose --all

      - name: test_all
        run: cargo test --verbose --all

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt
      - name: run_rustfmt_check
        run: |
          cargo fmt --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v2
      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy
      - name: run_clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args:  --all --tests -- -Dclippy::all

  cargo_deny:
    name: cargo_deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
